%!PS

% --------------------------------------------------------------------
% Config

/widthContainer 100 def
/widthVoiceShape 60 def

% --------------------------------------------------------------------
% Utilities

/bdef { bind def } bind def
/xdef { exch def } bdef

    % cx cy w => ｢empty｣
/squarePath {
    /w xdef
    /cy xdef
    /cx xdef
    /radius { w 2 div } bdef
    /x { cx radius sub } bdef
    /y { cy radius sub } bdef
    newpath
        x y moveto
        w 0 rlineto
        0 w rlineto
        w neg 0 rlineto
    closepath
} bdef

    % cx cy w => ｢empty｣
/circlePath {
    /w xdef
    /cy xdef
    /cx xdef
    /radius { w 2 div } bdef
    newpath
        cx cy radius 0 360 arc
    closepath
} bdef

    % cx cy containerWidtth => ｢empty｣
/equilateralTrianglePath {
    /containerWidth xdef
    /cy xdef
    /cx xdef
    /containerRadius { containerWidth 2 div } bdef
    /xApex cx def
    /yApex { cy containerRadius add } bdef
    /side { 3 sqrt containerRadius mul } bdef
         % Find using polar coordinates.
    /xBottomLeftCorner { 240 cos side mul xApex add } bdef
    /yBottomLeftCorner { 240 sin side mul yApex add } bdef
    newpath
        xApex yApex moveto
        xBottomLeftCorner yBottomLeftCorner lineto
        side 0 rlineto
    closepath
} bdef

    % cx cy => ｢empty｣
/containerPath {
    /cy xdef
    /cx xdef
    cx cy widthContainer squarePath
} bdef

    % cx cy => ｢empty｣
/squareVoicePath {
    /cy xdef
    /cx xdef
    cx cy widthVoiceShape squarePath
} bdef

    % cx cy => ｢empty｣
/circleVoicePath {
    /cy xdef
    /cx xdef
    cx cy widthVoiceShape circlePath
} bdef

    % cx cy => ｢empty｣
/triangleVoicePath {
    /cy xdef
    /cx xdef
    cx cy widthVoiceShape equilateralTrianglePath
} bdef

% --------------------------------------------------------------------
% Program

100 100 containerPath stroke
100 100 triangleVoicePath stroke

200 100 containerPath stroke
200 100 circleVoicePath stroke

300 100 containerPath stroke
300 100 squareVoicePath stroke
